# Generated with Atomizr – https://atom.io/packages/atomizr
".text.basic.html":
  "amexio-accordion":
    prefix: "amexio-accordion"
    body: '''
  <amexio-accordion>
  	<amexio-accordion-tab header="${1:header}" active="true">
    	${2:Content}
  	</amexio-accordion-tab>
  </amexio-accordion>
  '''
    description: "Amexio Accordian Pane"
  "amexio-accordion-expand-all":
    prefix: "amexio-accordion-expand-all"
    body: '''
  <amexio-accordion  expand-all=\"${1:isExpandAll}\">
  \t<amexio-accordion-tab header=\"${3:header}\" active=\"true\">
  \t\t${3:Content}
  \t</amexio-accordion-tab>
  </amexio-accordion>
  '''
    description: "Amexio Accordian Pane Expand All"
  "amexio-accordion-transperent":
    prefix: "amexio-accordion-transperent"
    body: '''
  <amexio-accordion transparent=\"true\" angle-icon=\"true\">
  \t<amexio-accordion-tab header=\"${2:header}\" active=\"true\">
  \t\t${3:Content}
  \t</amexio-accordion-tab>
  </amexio-accordion>
  '''
    description: "Amexio Accordian Pane Expand All"
  "amexio-border-layout":
    prefix: "amexio-border-layout"
    body: '''
  <amexio-borderlayout>
  \t<amexio-borderlayout-item position=\"${1:position}\">
  \t\t${2:Content}
  \t</amexio-borderlayout-item>
  </amexio-borderlayout>
  '''
    description: "Layout [position] :: north : east : center : west : south"
  "amexio-border-layout-item":
    prefix: "amexio-border-layout-item"
    body: '''
  <amexio-borderlayout-item position=\"${1:position}\">
  \t${2:Content}
  </amexio-borderlayout-item>
  '''
    description: "Layout [position] :: north : east : center : west : south"
  "amexio-row":
    prefix: "amexio-row"
    body: '''
  <amexio-row>
  \t
  </amexio-row>
  '''
    description: "Amexio Row"
  "amexio-column":
    prefix: "amexio-column"
    body: '''
  <amexio-column [size] =\"${1:Size}\">
  \t
  </amexio-column>
  '''
    description: "Amexio Column [size] :: 2:4:6:12"
  "amexio-card":
    prefix: "amexio-card"
    body: '''
  <amexio-card [header]=\"${1:enableHeader}\"
  [footer]=\"${2:enableFooter}\"
  [show]=\"${3:show}\"
  [footer-align]=\"'${4:align}'\"
  height=\"${5:height}\">
  \t<amexio-header>
  \t\t${6:header}
  \t</amexio-header>
  \t<amexio-body>
  \t${7:body}
  \t</amexio-body>
  \t<amexio-action>
  \t\t${8:footer}
  \t</amexio-action>
  </amexio-card>
  '''
    description: "Amexio Card "
  "amexio-card-image":
    prefix: "amexio-card-image"
    body: '''
  <amexio-card [header]=\"${1:enableHeader}\"
  [footer]=\"${2:enableFooter}\"
  [show]=\"${3:show}\"
  [footer-align]=\"'${4:align}'\"
  [height]=\"${5:height}\">
  \t<amexio-header>
  \t\t${6:header}
  \t</amexio-header>
  \t<amexio-body>
  \t\t<amexio-image path=\"${7:image}\">
  \t</amexio-body>
  \t<amexio-action>
  \t\t${8:footer}
  \t</amexio-action>
  </amexio-card>
  '''
    description: "Amexio Card with image"
  "amexio-carousel":
    prefix: "amexio-carousel"
    body: '''
  <amexio-carousel [header]=\"'${1:Header}'\"
  \t\t[data]=\"${2:data}\"
  \t\t mode=\"multiple\">
  \t\t\t <ng-template let-img amexioTemplate=\"${3:item}\">
  \t\t\t\t <amexio-image [height]=\"'${4:height}'\"
  \t\t\t\t path=\"{{img}}\">
  \t\t\t </ng-template>
  </amexio-carousel>
  '''
    description: "Amexio Carousel"
  "amexio-carousel-shuffle":
    prefix: "amexio-carousel-shuffle"
    body: '''
  <amexio-carousel [header]=\"'${1:Header}'\"
  \t\t[data]\"${2:data}\"
  \t\t mode=\"multiple\"
  \t\t shuffle-interval=\"${3:interval}\">
  \t\t\t <ng-template let-img amexioTemplate=\"${3:item}\">
  \t\t\t\t <amexio-image [height]=\"'${4:height}'\"
  \t\t\t\t path=\"{{img}}\">
  \t\t\t </ng-template>
  </amexio-carousel>
  '''
    description: "Amexio Carousel with Shuffle Interval"

  "amexio-fieldset":
    prefix: "amexio-fieldset"
    body: '''
  <amexio-fieldset [collapsible]=\"true\"
  \t title=\"${1:title}\">
  </amexio-fieldset>
  '''
    description: "Amexio Fieldset"
  "amexio-fieldset-collapsed":
    prefix: "amexio-fieldset-collapsed"
    body: '''
  <amexio-fieldset [collapsible]=\"false\"
  \t title=\"${1:title}\">
  </amexio-fieldset>
  '''
    description: "Amexio Fieldset "
  "amexio-panel":
    prefix: "amexio-panel"
    body: '''
  <amexio-panel [header]=\"true\"
  \t[title]=\"'${1:title}'\"
  \t[expanded]=\"true\">
  </amexio-panel>
  '''
    description: "Amexio Panel"
  "amexio-label":
    prefix: "amexio-label"
    body: '''
  <amexio-label [size]=\"${1:size}\">
  data
  </amexio-label>
  '''
    description: "Amexio Label"
  "amexio-label-with-font-color":
    prefix: "amexio-label-with-font-color"
    body: '''
    <amexio-label [size]=\"${1:size}\" [font-color]=\"${1:fontcolor}\">
    data
    </amexio-label>
    '''
    description: "Amexio Label with Font Color"
  "amexio-panel-custom-header":
    prefix: "amexio-panel-custom-header"
    body: '''
  <amexio-panel [header]=\"true\"
  \t[title]=\"'${1:title}'\"
  \t[expanded]=\"true\">
  \t\t <amexio-header>
  \t\t\t <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\"></i>
  \t\t </amexio-header>

  </amexio-panel>
  <amexio-dialogue [show-dialogue]=\"refreshDialogue\"
  \t [title]=\"'refresh'\"
  \t [message]=\"'Data refresh successfully.'\"
  \t [primary-action-label]=\"'ok'\"
  \t [message-type]=\"'warning'\" [type]=\"'alert'\">
  </amexio-dialogue>
  '''
    description: "Amexio Panel Custom Header"
  "amexio-panel-no-header":
    prefix: "amexio-panel-no-header"
    body: '''
  <amexio-panel [header]=\"false\"
  \t[title]=\"'${1:title}'\"
  \t[expanded]=\"true\">

  </amexio-panel>
  '''
    description: "Amexio Panel without Header"
  "amexio-steps":
    prefix: "amexio-steps"
    body: '''
  <amexio-steps [block]=\"true\" [index]=\"true\">
  \t <amexio-step-block [label]=\"'${1:label}'\"
  \t [active]=\"true\" >
  \t </amexio-step-block>
  </amexio-steps>
  '''
    description: "Amexio Steps"
  "amexio-steps-block":
    prefix: "amexio-step-block"
    body: '''
  \t <amexio-step-block [label]=\"'${2:label}'\"
  \t [active]=\"true\">
  \t </amexio-step-block>
  '''
    description: "Amexio Steps Block"
  "amexio-steps-block-with-icon":
    prefix: "amexio-step-block-with-icon"
    body: '''
<amexio-steps [block]=\"true\"
\t [icon]=\"true\"
\t (onClick)=\"${1:onClickEvent}(\\$event)\">
\t\t <amexio-step-block [label]=\"'${2:label}'\"
\t\t [active]=\"${3:active}\"
\t\t [active]=\"${4:icon}\" >
\t\t </amexio-step-block>
</amexio-steps>
  '''
    description: "Amexio Steps Block with Icon"
  "amexio-steps-clickable":
    prefix: "amexio-steps-clickable"
    body: '''
  <amexio-steps [block]=\"true\"
  \t [index]=\"true\"
  \t (onClick)=\"${1:onClickEvent}(\\$event)\">
  \t\t <amexio-step-block [label]=\"'${2:label}'\"
  \t\t [active]=\"${3:active}\" >
  \t\t </amexio-step-block>
  </amexio-steps>
  '''
    description: "Amexio Steps Clickable"
  "amexio-steps-with-index":
    prefix: "amexio-steps-with-index"
    body: '''
  <amexio-steps
  \t [index]=\"true\"
  \t (onClick)=\"${1:onClickEvent}(\\$event)\">
  \t\t <amexio-step-block [label]=\"'${2:label}'\"
  \t\t [active]=\"true\" >
  \t\t </amexio-step-block>
  </amexio-steps>
  '''
    description: "Amexio Steps with Index"
  "amexio-tab-view":
    prefix: "amexio-tab-view"
    body: '''
  <amexio-tab-view  [closable]=\"false\">
  \t <amexio-tab title=\"${1:title}\"
  \t [active]=\"true\">
  \t\t${2:Content}
  \t </amexio-tab>
  </amexio-tab-view>
  '''
    description: "Amexio Tab View"
  "amexio-tab":
    prefix: "amexio-tab"
    body: '''
  \t <amexio-tab title=\"${1:title}\"
  \t [active]=\"${2:isActive}\">
  \t\t${3:Content}
  \t </amexio-tab>
  '''
    description: "Amexio Tab"
  "amexio-tab-view-closable":
    prefix: "amexio-tab-view-closable"
    body: '''
  <amexio-tab-view  [closable]=\"${1:closable}\">
  \t <amexio-tab title=\"${2:title}\"
  \t [active]=\"true\">
  \t\t${3:Content}
  </amexio-tab>
  </amexio-tab-view>
  '''
    description: "Amexio Closable Tab"
  "amexio-tab-with-icon":
    prefix: "amexio-tab-with-icon"
    body: '''
  <amexio-tab title=\"${1:title}\"
  \t [active]=\"${2:isActive}\"
  \t [icon]=\"'${3:icon}'\">
  \t\t${4:Content}
  </amexio-tab>
  '''
    description: "Amexio Tab with Icon"
  "amexio-tab-view-with-icon":
    prefix: "amexio-tab-with-icon"
    body: '''
  <amexio-tab-view  [closable]=\"${1:closable}\">
  \t<amexio-tab title=\"${1:title}\"
  \t [active]=\"${2:isActive}\"
  \t [icon]=\"'${3:icon}'\">
  \t\t${4:Content}
  \t</amexio-tab>
  </amexio-tab-view>
  '''
    description: "Amexio Tab with Icon"
  "amexio-tab-view-vertical":
    prefix: "amexio-tab-view-vertical"
    body: '''
  <amexio-vertical-tab-view>
  \t<amexio-tab title=\"${1:title}\"
  \t [active]=\"${2:isActive}\"
  \t [icon]=\"'${3:icon}'\">
  \t\t${3:Content}
  \t</amexio-tab>
  </amexio-vertical-tab-view>
  '''
    description: "Amexio Vertical Tab "
  "amexio-tab-view-vertical-right":
    prefix: "amexio-tab-view-vertical-right"
    body: '''
  <amexio-right-vertical-tab-view>
  \t<amexio-tab title=\"${1:title}\"
  \t [active]=\"${2:isActive}\"
  \t [icon]=\"'${3:icon}'\">
  \t\t${3:Content}
  \t</amexio-tab>
  <amexio-right-vertical-tab-view>
  '''
    description: "Amexio Right Vertical Tab "

  "amexio-window":
    prefix: "amexio-window"
    body: '''
  <amexio-window [show-window]=\"showBasicWindow\"
  \t type=\"window\"
  \t [closable]=\"false\">
  \t\t<amexio-header>
  ${1:header}
  \t\t</amexio-header>
  \t\t<amexio-body>
  ${2:body}
  \t\t</amexio-body>
  \t\t<amexio-action>
  ${3:action}
  \t\t</amexio-action>
  </amexio-window>
  '''
    description: "Amexio Window "
  "amexio-window-maximize":
    prefix: "amexio-window-maximize"
    body: '''
  <amexio-window [show-window]=\"showMaxWindow\"
  \t type=\"window\"
  \t [closable]=\"false\"
  \t [maximize]=\"true\">
  \t\t<amexio-header>
  ${1:header}
  \t\t</amexio-header>
  \t\t<amexio-body>
  ${2:body}
  \t\t</amexio-body>
  \t\t<amexio-action>
  ${3:action}
  \t\t</amexio-action>
  </amexio-window>
  '''
    description: "Amexio Window Maximized "
  "amexio-window-closable":
    prefix: "amexio-window-closable"
    body: '''
  <amexio-window [show-window]=\"showClosable\"
  \t type=\"window\"
  \t [closable]=\"true\">
  \t\t<amexio-header>
  ${1:header}
  \t\t</amexio-header>
  \t\t<amexio-body>
  ${2:body}
  \t\t</amexio-body>
  \t\t<amexio-action>
  ${3:action}
  \t\t</amexio-action>
  </amexio-window>
  '''
    description: "Amexio Window Closable "
  "amexio-dialogue-confirm":
    prefix: "amexio-dialogue-confirm"
    body: '''
  <amexio-dialogue [show-window]=\"confirmdialogue\"
  \t [title]=\"'${1:title}'\"
  \t [message]=\"'${2:message}'\"
  \t [message-type]=\"'confirm'\"
  \t [type]=\"'confirm'\">
  </amexio-dialogue>
  '''
    description: "Amexio Confirmation Dialogue Box "
  "amexio-dialogue-error":
    prefix: "amexio-dialogue-error"
    body: '''
  <amexio-dialogue [show-window]=\"errordialogue\"
  \t [title]=\"'${1:title}'\"
  \t [message]=\"'${2:message}'\"
  \t [primary-action-label]=\"'ok'\"
  \t [message-type]=\"'error'\"
  \t [type]=\"'alert'\">
  </amexio-dialogue>
  '''
    description: "Amexio Error Dialogue Box "
  "amexio-dialogue-warning":
    prefix: "amexio-dialogue-warning"
    body: '''
  <amexio-dialogue [show-window]=\"warningdialogue\"
  \t [title]=\"'${1:title}'\"
  \t [message]=\"'${2:message}'\"
  \t [message-type]=\"'warning'\"
  \t [type]=\"'alert'\">
  </amexio-dialogue>
  '''
    description: "Amexio Warning Dialogue Box "
  "amexio-dialogue-help":
    prefix: "amexio-dialogue-help"
    body: '''
  <amexio-dialogue [show-window]=\"helpdialogue\"
  \t [title]=\"'${1:title}'\"
  \t [message]=\"'${2:message}'\"
  \t [message-type]=\"'help'\"
  \t [type]=\"'alert'\">
  </amexio-dialogue>
  '''
    description: "Amexio Help Dialogue Box "
  "amexio-dialogue-custom":
    prefix: "amexio-dialogue-custom"
    body: '''
  <amexio-dialogue [show-window]=\"customdialogue\"
  \t [title]=\"'${1:title}'\"
  \t [custom]=\"'true'\"
  \t [type]=\"'confirm'\">
  \t\t<amexio-body>
  \t\t\t${2:ContentBody}
  \t\t</amexio-body>
  \t\t<amexio-action>
  \t\t\t${3:ContentAction}
  \t\t</amexio-action>
  </amexio-dialogue>
  '''
    description: "Amexio Custom Dialogue Box "
  "amexio-image":
    prefix: "amexio-image"
    body: '''
  <amexio-image [path]=\"'${1:path}'\"
  [c-class]=\"'img-style'\"
  [tooltip]=\"'${2:tooltip}'\">
  </amexio-image>
  '''
    description: "Amexio Image "
  "amexio-image-icon-fontawesome":
    prefix: "amexio-image-icon-fontawesome"
    body: '''
  <amexio-image [icon-class]=\"'${1:iconClass}'\"
  \t[tooltip]=\"'${2:tooltip}'\">
  </amexio-image>
  '''
    description: "Amexio Icon form font-awesome "
  "amexio-image-icon-mdb":
    prefix: "amexio-image-icon-mdb"
    body: '''
  <amexio-image [icon-class]=\"'${1:iconClass}'\"
  [mda]=\"'cloud'\"
  \t[tooltip]=\"'${2:tooltip}'\">
  </amexio-image>
  '''
    description: "Amexio Icon form material design "
  "amexio-video":
    prefix: "amexio-video"
    body: '''
  <amexio-video-player path=\"${1:path}\">
  </amexio-video-player>
  '''
    description: "Amexio Video "
  "amexio-dockbar":
    prefix: "amexio-dockbar"
    body: '''
  <amexio-dockbar [height]=\"'${1:height}'\">
  \t<amexio-dockbar-item [icon]=\"'${2:icon}'\"
  \t\t[title]=\"'${3:title}'\"
  \t\t[width]=\"'${4:width}'\">
  \t\t\t${5:Content}
  \t\t</amexio-dockbar-item>
  \t</amexio-dockbar>
  '''
    description: "Amexio Dockbar "
  "amexio-dockbar-item":
    prefix: "amexio-dockbar-item"
    body: '''
  \t<amexio-dockbar-item [icon]=\"'${2:icon}'\"
  \t\t[title]=\"'${3:title}'\"
  \t\t[width]=\"'${4:width}'\">
  \t\t\t${5:Content}
  \t\t</amexio-dockbar-item>
  '''
    description: "Amexio Dockbar Item"

  "amexio-sidenav":
    prefix: "amexio-sidenav"
    body: '''
  <amexio-side-nav
  \t[http-url]=\"'${1:path}'\"
  \t[http-method]=\"'get'\"
  \t[data-reader]=\"'data'\"
  \t[width]=\"'${2:width}'\"
  \t[position]=\"'relative'\">
  </amexio-side-nav>
  '''
    description: "Amexio Sidenav Bar"
  "amexio-menubar":
    prefix: "amexio-menubar"
    body: '''
  <amexio-menu
  \t[http-url]=\"'${1:path}'\"
  \t[http-method]=\"'get'\"
  \t[data-reader]=\"'data'\">
  </amexio-menu>
  '''
    description: "Amexio Menu Bar"
  "amexio-checkbox":
    prefix: "amexio-checkbox"
    body: '''
  <amexio-checkbox
  \t\t[field-label]=\"'${1:label}'\"
  \t\t[(ngModel)]=\"${2:ngModel}\"
  \t\t(onSelection)=\"${3:onCheckClick}(\\$event)\">
  </amexio-checkbox>
  '''
    description: " Simple Single CheckBox"
  "amexio-checkbox-disable":
    prefix: "amexio-checkbox-disable"
    body: '''
  <amexio-checkbox
  \t [disabled]=\"true\"
  \t [field-label]=\"'${1:label}'\"
  \t [(ngModel)]=\"${2:ngModel}\">
  </amexio-checkbox>
  '''
    description: "Single CheckBox With Disable option"
  "amexio-checkbox-group-local-data":
    prefix: "amexio-checkbox-group-local-data"
    body: '''
   <amexio-checkbox-group
  \t [field-label]=\"'${1:label}'\"
  \t name=\" ${2:name}\"
  \t [data-reader]=\"'${3:dataReader}'\"
  \t [display-field]=\"'${2:displayField}'\"
  \t [horizontal]=\"true\"
  \t [value-field]=\"'${5:valueField}'\"
  \t (onSelection)=\"${6:selectedCheckboxgroup}(\\$event)\"
  \t [data]=\"'${7:checkboxdata}'\"
  \t [column]=\"'${8:number of columns}'\">
  </amexio-checkbox-group>
  '''
    description: "Checkbox Group With Local Data"
  "amexio-checkbox-group-http-url":
    prefix: "amexio-checkbox-group-http-url"
    body: '''
  <amexio-checkbox-group
  \t [field-label]=\"'label'\"
  \t name=\"${2:name}\"
  \t [data-reader]=\"'${3:data}'\"
  \t [display-field]=\"'${2:displayField}'\"
  \t [value-field]=\"'${4:valueField}'\"
  \t [http-method]=\"'get'\"
  \t [http-url]=\"${5:url}\">
  </amexio-checkbox-group>
  '''
    description: "Checkbox Group With Http Url"
  "amexio-date-picker":
    prefix: "amexio-date-picker"
    body: '''
  <amexio-date-time-picker
  \t [field-label]=\"'${1:label}'\"
  \t [time-picker]=\"false\"
  \t [date-picker]=\"true\"
  \t [(ngModel)]=\"${2:ngModel}\">
  </amexio-date-time-picker>
  '''
    description: "Date Picker Used To Select The Date"
  "amexio-time-picker":
    prefix: "amexio-time-picker"
    body: '''
  <amexio-date-time-picker
  \t [field-label]=\"'${1:label}'\"
  \t [time-picker]=\"true\"
  \t [date-picker]=\"false\"
  \t [ngModel]=\"'${2:ngModel}'\"
  \t (change)=\"${3:onChangeTime}(\\$event)\">
  </amexio-date-time-picker>
  '''
    description: "Time Picker Used To Select Time"
  "amexio-dropdown":
    prefix: "amexio-dropdown"
    body: '''
  <amexio-dropdown
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t name=\"${3:name}\"
  \t [data-reader]=\"'${4:data}'\"
  \t [field-label]=\"'${5:fieldLabel}'\"
  \t [http-url]=\"'${6:url}'\"
  \t [http-method]=\"'get'\"
  \t [display-field]=\"'${3:displayField}'\"
  \t [value-field]=\"'${7:valueField}'\">
  </amexio-dropdown>
  '''
    description: "Basic Dropdown List"
  "amexio-dropdown-http-url":
    prefix: "amexio-dropdown-http-url"
    body: '''
   <amexio-dropdown
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [place-holder]=\"'${1:placeHolder}'\"
  \t name=\"'${2:name}'\"
  \t [data-reader]=\"'${3:data}'\"
  \t [field-label]=\"'${4:fieldLabel}'\"
  \t [http-url]=\"'${5:url}'\"
  \t [http-method]=\"'get'\"
  \t [display-field]=\"'${2:displayField}'\"
  \t [value-field]=\"'${6:valueField}'\">
  </amexio-dropdown>
  '''
    description: "Simple dropdown with http url"
  "amexio-dropdown-filter-http-url":
    prefix: "amexio-dropdown-filter-http-url"
    body: '''
  <amexio-dropdown
  \t\t [(ngModel)]=\"${1:ngModel}\"
  \t\t [place-holder]=\"'${2:placeHolder}'\"
  \t\t name=\"${3:name}\"
  \t\t [search]=\"search\"
  \t\t [data-reader]=\"'${4:data}'\"
  \t\t [field-label]=\"'${5:fieldLabel}'\"
  \t\t [http-url]=\"'${6:url}'\"
  \t\t [http-method]=\"'get'\"
  \t\t [display-field]=\"'${3:displayField}'\"
  \t\t [value-field]=\"'${7:valueField}'\"
  \t\t (onSingleSelect)=\"${8:getSingleVal}(\\$event)\">
  </amexio-dropdown>
  '''
    description: "Simple dropdown Filter With Http Url"
  "amexio-dropdown-multi-select-http-url":
    prefix: "amexio-dropdown-multi-select-http-url"
    body: '''
   <amexio-dropdown
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t name=\"${3:name}\"
  \t [data-reader]=\"'${4:dataReader}'\"
  \t [field-label]=\"'${5:fieldLabel}'\"
  \t [http-url]=\"'${6:url}'\"
  \t [http-method]=\"'get'\"
  \t [display-field]=\"'${3:displayField}'\"
  \t [value-field]=\"'${7:valueField}'\"
  \t [multi-select]=\"true\"
  \t (onSingleSelect)=\"${8:getSingleVal}(\\$event)\">
  </amexio-dropdown>
  '''
    description: "Simple Dropdown Multi Select With Http Url"
  "amexio-email-input":
    prefix: "amexio-email-input"
    body: '''
  <amexio-email-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [allow-blank]=\"false\"
  \t [error-msg] =\"'${4:errorMsg}'\"
  \t [enable-popover]=\"true\"
  \t [icon-feedback]=\"true\">
  </amexio-email-input>
  '''
    description: "Basic Email Input Feature"
  "amexio-email-input-disable":
    prefix: "amexio-email-input-disable"
    body: '''
  <amexio-email-input
  \t name =\"${1:name}\"
  \t [field-label]=\"'${2:fieldLabel}'\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [disabled]=\"true\">
  </amexio-email-input>
  '''
    description: "Email Input With Disable Feature"
  "amexio-email-input-font-style":
    prefix: "amexio-email-input-font-style"
    body: '''
  <amexio-email-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [icon-feedback]=\"true\"
  \t [font-style]=\"'${4:fontStyle}'\">
  </amexio-email-input>
  '''
    description: "Email Input with Font Style feature"
  "amexio-email-font-family":
    prefix: "amexio-email-font-family"
    body: '''
  <amexio-email-input
  \t name=\"${1:name}\"
  \t [field-label]=\"'${1:fieldlabel}'\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t [font-family]=\"'${3:fontFamily}'\"
  \t [font-size]=\"'${4:fontSize}'\">
  </amexio-email-input>
  '''
    description: "Email Font Family"
  "amexio-file-upload":
    prefix: "amexio-file-upload"
    body: '''
  <amexio-fileupload
  \t [http-url]=\"'${1:httpUrl}'\"
  \t [http-method]=\"'POST'\"
  \t [file-type]=\"'${2:fileType/*}'\"
  \t [multiple-file]=\"'*'\"
  \t [field-label]=\"'${4:fieldLabel}'\">
  </amexio-fileupload>
  '''
    description: "Simple-File-Upload"
  "amexio-file-upload-drag-drop":
    prefix: "amexio-file-upload-drag-drop"
    body: '''
  <amexio-fileupload
  \t [http-url]=\"'${1:httpUrl}'\"
  \t [http-method]=\"'POST'\"
  \t [file-type]=\"'${2:fileType}'\"
  \t  [field-label]=\"'${4:fieldLabel}'\"
  \t droppable=\"true\">
  </amexio-fileupload>
  '''
    description: "Drag drop zone"
  "amexio-number-input":
    prefix: "amexio-number-input"
    body: '''
  <amexio-number-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t [place-holder]=\"'${2:placeHolder}'\">
  </amexio-number-input>
  '''
    description: "Basic Number Input"
  "amexio-number-input-disable":
    prefix: "amexio-number-input-disable"
    body: '''
  <amexio-number-input
  \t [place-holder]=\"'${1:placeHolder}'\"
  \t [icon-feedback]=\"false\"
  \t [has-label]=\"false\"
  \t [disabled]=\"true\">
  </amexio-number-input>
  '''
    description: "Number Input With Disable"
  "amexio-number-input-font-style":
    prefix: "amexio-number-input-font-style"
    body: '''
  <amexio-number-input
  \t[field-label]=\"'${1:fieldLabel}'\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t [font-style]=\"'${3:fontStyle}'\">
  </amexio-number-input>
  '''
    description: "Number Input With Different Font Style"
  "amexio-number-input-min-max-validation":
    prefix: "amexio-number-input-min-max-validation"
    body: '''
  <amexio-number-input
  \t [enable-popover]=\"true\"
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t [allow-blank]=\"false\"
  \t [error-msg] =\"'${3:errorMsg}'\"
  \t [min-value]=\"${4:minValue}\"
  \t [min-error-msg]=\"'${5:minErrrorMsg}'\"
  \t [max-value]=\"${6:maxValue}\"
  \t [max-error-msg]=\"'${7:maxErrorMsg}'\"
  \t [icon-feedback]=\"true\">
  </amexio-number-input>
  '''
    description: "Number Input With Min/Max Validation Feature"
  "amexio-password-min-max-validation":
    prefix: "amexio-password-min-max-validation"
    body: '''
  <amexio-password-input
  \t [enable-popover]=\"true\"
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [allow-blank]=\"false\"
  \t [error-msg] =\"'${4:errorMsg}'\"
  \t [min-length]=\"${5:minLength}\"
  \t [min-error-msg]=\"'${6:minErrorMsg}'\"
  \t [max-length]=\"${7:maxLength}\"
  \t [max-error-msg]=\"'${8:maxErrorMsg}'\"
  \t [icon-feedback]=\"true\">
  </amexio-password-input>
  '''
    description: "Password With Min/Max Validation"
  "amexio-password-input-disable-label":
    prefix: "amexio-password-input-disable-label"
    body: '''
  <amexio-password-input
  \t name =\"${1:name}\"
  \t [place-holder]=\"'${2:placeHolder}'\"
  \t [allow-blank]=\"false\"
  \t [error-msg] =\"'${3:errorMsg}'\"
  \t [min-length]=\"${4:minLength}\"
  \t [min-error-msg]=\"'${5:minErrorMsg}'\"
  \t [max-length]=\"${7:maxLength}\"
  \t [max-error-msg]=\"'${6:maxErrorMsg}'\"
  \t [icon-feedback]=\"true\"
  \t [has-label]=\"false\">
  </amexio-password-input>
  '''
    description: "Password Input With Disable Field Label"
  "amexio-radio-group-horizontal-local-data":
    prefix: "amexio-radio-group-horizontal-local-data"
    body: '''
  <amexio-radio-group
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [data-reader]=\"'${3:dataReader}'\"
  \t [display-field]=\"'${2:displayField}'\"
  \t [value-field]=\"'${4:valueField}'\"
  \t [horizontal]=\"true\"
  \t [data]=\"${5:data}\"
  \t (onSelection)=\"${6:setSelectedGender}(\\$event)\">
  </amexio-radio-group>
  '''
    description: "Horizontal Radio Group With Lcoal Data"
  "amexio-radio-group-vertical-http-URL":
    prefix: "amexio-radio-group-vertical-http-URL"
    body: '''
  <amexio-radio-group
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [data-reader]=\"'${3:dataReader}'\"
  \t [display-field]=\"'${2:displayField}'\"
  \t [value-field]=\"'${4:valueField}'\"
  \t [http-method]=\"'get'\"
  \t [http-url]=\"'${5:assets/data/componentdata/file.json}'\"
  \t (onSelection)=\"${6:setSelectedGender(\\$event)}\">
  </amexio-radio-group>
  '''
    description: "Vertical Radio Group With Http URL"
  "amexio-rating-label":
    prefix: "amexio-rating-label"
    body: '''
  <amexio-rating-input
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [field-label]=\"'${2:fieldLabel}'\"
  \t [max]=\"${3:max}\"
  \t name=\"${4:name}\"
  \t [read-only]=\"${5:isReadonly}\">
  </amexio-rating-input>
  '''
    description: "Simple Rating Component With Label"
  "amexio-rating-read-only":
    prefix: "amexio-rating-read-only"
    body: '''
  <amexio-rating-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t [(ngModel)]=\"${2:ngModel}\"
  \t [max]=\"${3:max}\"
  \t [read-only]=\"true\">
  </amexio-rating-input>
  '''
    description: "Read Only Rating"
  "amexio-rating-custom-icons":
    prefix: "amexio-rating-custom-icons"
    body: '''
  <amexio-rating-input
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [full-icon]=\"'☑'\"
  \t [empty-icon]=\"'☐'\"
  \t [max]=\"${2:max}\"
  \t name=\"${3:name}\"
  \t [read-only]=\"isReadonly\">
  </amexio-rating-input>
  '''
    description: "Rating Component With Custom Icons"
  "amexio-rating-rate-titles":
    prefix: "amexio-rating-rate-titles"
    body: '''
  <amexio-rating-input
  \t [(ngModel)]=\"${1:ngModel}\"
  \t [full-icon]=\"'☑'\"
  \t [empty-icon]=\"'☐'\"
  \t [max]=\"${2:max}\"
  \t name=\"${3:name}\"
  \t [titles]=\"${4:titles}\"
  \t [read-only]=\"isReadonly\">
  </amexio-rating-input>
  '''
    description: "Rating With Rate Titles"
  "amexio-slider-min-max":
    prefix: "amexio-slider-min-max"
    body: '''
  <amexio-slider
  \t min-value=\"${1:minValue}\"
  \t max-value=\"${2:maxValue}\"
  \t step-value=\"${3:stepValue}\"
  \t [(ngModel)]=\"${4:ngModel}\">
  </amexio-slider>
  '''
    description: "Slider With Min/Max"
  "amexio-type-head":
    prefix: "amexio-type-head"
    body: '''
  <amexio-typeahead
  \t [data-reader]=\"'${1:dataReader}'\"
  \t [key]=\"'${2:key}'\"
  \t [display-field]=\"'${3:displayField}'\"
  \t [place-holder]=\"'${4:placeHolder}'\"
  \t [http-url]=\"'${url}'\"
  \t [http-method]=\"'get'\"
  \t (change)=\"${6:onSelection(\\$event)}\"
  \t [field-label]=\"'${7:fieldLabel}'\">
  </amexio-typeahead>
  '''
    description: "Simple Type a Head That Displays Type a Head Options"
  "amexio-tag-input-http-url":
    prefix: "amexio-tag-input-http-url"
    body: '''
  <amexio-tag-input
  \t [data-reader]=\"'${1:dataReader}'\"
  \t [http-url]=\"'${url}'\"
  \t [http-method]=\"'get'\"
  \t [key]=\"'${3:key}'\"
  \t [display-field]=\"'${4:displayField}'\"
  \t [value-field]=\"'${5:valueField}'\"
  \t [(ngModel)]=\"${6:ngModel}\"
  \t [field-label]=\"'${7:fieldLabel}'\"
  \t (onChange)=\"${8:onRecordSelect}(\\$event)\">
  </amexio-tag-input>
  '''
    description: "Taginput With Http-url"
  "amexio-text-field":
    prefix: "amexio-text-field"
    body: '''
  <amexio-text-input
  \t field-label=\"${1:fieldLabel}\"
  \t name=\"${2:name}\"
  \t place-holder=\"${3:placeHolder}\"
  \t icon-feedback=\"true\">
  </amexio-text-input>
  '''
    description: "Basic Text Field"
  "amexio-text-field-without-label-icon-feedback":
    prefix: "amexio-text-field-without-label-icon-feedback"
    body: '''
  <amexio-text-input
  \t name=\"${1:name}\"
  \t place-holder=\"${2:placeHolder}\"
  \t icon-feedback=\"false\"
  \t has-label=\"false\">
  </amexio-text-input>
  '''
    description: "Input Without Label and Icon Feedback"
  "amexio-text-field-min-max-validations":
    prefix: "amexio-text-field-min-max-validations"
    body: '''
  <amexio-text-input
  \t enable-popover=\"true\"
  \t field-label=\"${1:fieldLabel}\"
  \t name=\"${2:name}\"
  \t place-holder=\"${3:placeHolder}\"
  \t allow-blank=\"false\"
  \t error-msg=\"${4:errorMsg}\"
  \t min-length=\"${5:minLength}\"
  \t min-error-msg=\"${6:minErrorMsg}\"
  \t max-length=\"${7:maxLength}\"
  \t max-error-msg=\"${8:maxErrorMsg}\"
  \t icon-feedback=\"true\">
  </amexio-text-input>
  '''
    description: "Min/Max Validations"
  "amexio-text-field-disabeled":
    prefix: "amexio-text-field-disabeled"
    body: '''
  <amexio-text-input
  \t name=\"${1:name}\"
  \t field-label=\"${2:fieldLabel}\"
  \t place-holder=\"${3:placeHolder}\"
  \t disabled=\"true\">
  </amexio-text-input>
  '''
    description: "Disabled Text Field"
  "amexio-text-field-font-styling":
    prefix: "amexio-text-field-font-styling"
    body: '''
  <amexio-text-input
  \t field-label=\"${1:fieldLabel}\"
  \t name=\"${2:name}\"
  \t place-holder=\"${3:placeHolder}\"
  \t icon-feedback=\"true\"
  \t font-style=\"${4:fontStyle}\">
  </amexio-text-input>
  '''
    description: "Font Styling"
  "amexio-text-field-family-styling":
    prefix: "amexio-text-field-family-styling"
    body: '''
  <amexio-text-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name=\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [icon-feedback]=\"true\"
  \t [font-style]=\"'${4:fontStyle}'\">
  </amexio-text-input>
  '''
    description: "Family Styling"
  "amexio-text-field-font-size":
    prefix: "amexio-text-field-font-size"
    body: '''
  <amexio-text-input
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name=\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [icon-feedback]=\"true\"
  \t [font-size]=\"'${4:large}'\">
  </amexio-text-input>
  '''
    description: "Font Size"
  "amexio-text-area":
    prefix: "amexio-text-area"
    body: '''
  <amexio-textarea-input
  \t [enable-popover]=\"true\"
  \t [field-label]=\"'${1:fieldLabel}'\"
  \t name =\"${2:name}\"
  \t [place-holder]=\"'${3:placeHolder}'\"
  \t [allow-blank]=\"true\"
  \t [error-msg] =\"'${4:errorMsg}'\"
  \t [icon-feedback]=\"true\"
  \t [rows]=\"'${5:rows}'\"
  \t [columns]=\"'${6:columns}'\">
  </amexio-textarea-input>
  '''
    description: "Basic Text Area"
  "amexio-toggle-round":
    prefix: "amexio-toggle-round"
    body: '''
  <amexio-toggle
  \t [field-label]=\"'${1:fieldLabel}'\">
  </amexio-toggle>
  '''
    description: "Round Toggle"
  "amexio-toggle-square-event":
    prefix: "amexio-toggle-square-event"
    body: '''
  <amexio-toggle
  \t shape=\"square\"
  \t (onChange)=\"${1:onSquareToggleClick(\\$event)}\">
  </amexio-toggle>
  '''
    description: "Square Toggle With Event"
  "amexio-button-type":
    prefix: "amexio-button-type"
    body: '''
  <amexio-button
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'${2:type}'\"
  \t [tooltip]=\"'${3:toolTip}'\" >
  </amexio-button>
  '''
    description: "Button Types"
  "amexio-button-state":
    prefix: "amexio-button-state"
    body: '''
  <amexio-button
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'disabled'\"
  \t [tooltip]=\"'${2:toolTip}'\"
  \t [disabled]=\"'true'\" >
  </amexio-button>
  '''
    description: "Button States"
  "amexio-button-icon":
    prefix: "amexio-button-icon"
    body: '''
  <amexio-button
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'danger'\"
  \t [tooltip]=\"'${2:toolTip}'\"
  \t [icon]=\"'${4:icon}'\">
  </amexio-button>
  '''
    description: "Button with Icons"
  "amexio-button-size":
    prefix: "amexio-button-size"
    body: '''
  <amexio-button
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'primary'\"
  \t [tooltip]=\"'${2:toolTip}'\"
  \t [size]=\"'${3:size}'\">
    </amexio-button>
  '''
    description: "-Button Sizes can be set using this tag"
  "amexio-button-group":
    prefix: "amexio-button-group"
    body: '''
  <amexio-btn-group>
  \t <amexio-button
  \t\t[label]=\"'${1:label}'\"
  \t\t (onClick)=\"${2:getData}(\\$event)\">
  \t </amexio-button>
  \t <amexio-button
  \t\t [label]=\"'${3:label}'\"
  \t\t [type]=\"'warning'\">
  \t </amexio-button>
  </amexio-btn-group>
  '''
    description: "Button Group Component"
  "amexio-button-group-state":
    prefix: "amexio-button-group-state"
    body: '''
  <amexio-btn-group>
  \t <amexio-button
  \t\t [label]=\"'${1:label}'\"
  \t\t [type]=\"'primary'\"
  \t\t [tooltip]=\"'${2:toolTip}'\"
  \t\t [disabled]=\"'true'\">
  \t </amexio-button>
  \t <amexio-button
  \t\t [label]=\"'${4:label}'\"
  \t\t [type]=\"'primary'\"
  \t\t [tooltip]=\"'${3:toolTip}'\">
  \t </amexio-button>
  </amexio-btn-group>
  '''
    description: "Button Group States"
  "amexio-button-group-icon":
    prefix: "amexio-button-group-icon"
    body: '''
  <amexio-btn-group>
  \t <amexio-button
  \t\t [label]=\"'${1:label}'\"
  \t\t [type]=\"'primary'\"
  \t\t [tooltip]=\"'${2:toolTip}'\"
  \t\t [icon]=\"'${3:icon}'\" >
  \t </amexio-button>
  \t <amexio-button
  \t\t [label]=\"'${4:label}'\"
  \t\t [type]=\"'success'\"
  \t\t [tooltip]=\"'${5:toolTip}'\"
  \t\t [icon]=\"'${6:icon}'\" >
  \t </amexio-button>
  </amexio-btn-group>
  '''
    description: "Button Group with Icons"
  "amexio-button-group-size":
    prefix: "amexio-button-group-size"
    body: '''
  <amexio-row>
  \t <amexio-column
  \t\t [size]=\"${1:size}\">
  \t\t\t <amexio-btn-group>
  \t\t\t\t <amexio-button
  \t\t\t\t\t [size]=\"'${2:size}'\"
  \t\t\t\t\t[label]=\"'${3:label}'\"
  \t\t\t\t\t [type]=\"'primary'\"
  \t\t\t\t\t [tooltip]=\"'${4:toolTip}'\"
  \t\t\t\t\t [icon]=\"'${5:icon}'\" >
  \t\t\t\t </amexio-button>
  \t\t\t\t <amexio-button
  \t\t\t\t\t [size]=\"'${6:size}'\"
  \t\t\t\t\t [label]=\"'${7:label}'\"
  \t\t\t\t\t [type]=\"'success'\"
  \t\t\t\t\t [tooltip]=\"'save'\"
  \t\t\t\t\t [icon]=\"'${8:icon}'\" >
  \t\t\t\t </amexio-button>
  \t\t\t </amexio-btn-group>
  \t </amexio-column>
  </amexio-row>
  '''
    description: "Button Group Sizes"
  "amexio-button-dropdown":
    prefix: "amexio-button-dropdown"
    body: '''
  <amexio-btn-dropdown
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'${2:type}'\"
  \t [size]=\"'${3:size}'\" >
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${4:label}'\"
  \t\t\t [icon]=\"'${5:icon}'\">
  \t\t </amexio-btn-dropdown-item>
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${6:label}'\"
  \t\t\t [icon]=\"'${7:icon}'\">
  \t\t </amexio-btn-dropdown-item>
  </amexio-btn-dropdown>
  '''
    description: "Button dropdown list "
  "amexio-button-dropdown-size":
    prefix: "amexio-button-dropdown-size"
    body: '''
  <amexio-btn-dropdown
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'success'\"
  \t [size]=\"'default'\">
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${4:label}'\" >
  \t\t </amexio-btn-dropdown-item>
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${5:label}'\" >
  \t\t </amexio-btn-dropdown-item>
  </amexio-btn-dropdown>
  '''
    description: " Dropdown Button with size"
  "amexio-button-dropdown-disabled-link":
    prefix: "amexio-button-dropdown-disabled-link"
    body: '''
  <amexio-btn-dropdown
  \t [label]=\"'${1:label}'\"
  \t [type]=\"'primary'\"
  \t [size]=\"'default'\">
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${4:label}'\"
  \t\t\t [icon]=\"'${5:icon}'\"
  \t\t\t [disabled]=\"true\">
  \t\t </amexio-btn-dropdown-item>
  \t\t <amexio-btn-dropdown-item
  \t\t\t [label]=\"'${6:label}'\"
  \t\t\t [icon]=\"'${7:icon}'\">
  \t\t </amexio-btn-dropdown-item>
  </amexio-btn-dropdown>
  '''
    description: "Dropdown Button with disabled link feature"

  "amexio-notification":
    prefix: "amexio-notification"
    body: '''
  <amexio-notification
    \t [data]=\"${1:data}\"
    \t [vertical-position]=\"'top'\"
    \t [horizontal-position]=\"'right'\"
    \t [auto-dismiss-msg]=\"true\"
    \t [auto-dismiss-msg-interval]=\"${1:autoDismissMsgInterval}\">
  </amexio-notification>
  <amexio-button
    \t (onClick)=\"${2:cliclkfunction()}\"
    \t [label]=\"'${3:label}'\"
    \t [type]=\"'${4:type}'\"
    \t [tooltip]=\"'${5:toolTip}'\">
  </amexio-button>
  '''
    description: "Top Notification shows notification on top of screen"
  "amexio-notification-top-left":
    prefix: "amexio-notification-top-left"
    body: '''
  <amexio-notification
    \t [data]=\"${1:data}\"
    \t [vertical-position]=\"'top'\"
    \t [horizontal-position]=\"'left'\"
    \t [auto-dismiss-msg]=\"true\"
    \t [auto-dismiss-msg-interval]=\"${2:msgInterval}\">
  </amexio-notification>
  <amexio-button
  (onClick)=\"${3:functionName}()\"
    \t [label]=\"'${4:label}'\"
    \t [type]=\"'${5:type}'\"
    \t [tooltip]=\"'${6:toolTip}'\">
  </amexio-button>
  '''
    description: "Top Left Notificaion on Screen "
  "amexio-notification-top-right":
    prefix: "amexio-notification-top-right"
    body: '''
  <amexio-notification
    \t [data]=\"${1:data}\"
    \t [vertical-position]=\"'top'\"
    \t [horizontal-position]=\"'right'\"
    \t [auto-dismiss-msg]=\"true\"
    \t [auto-dismiss-msg-interval]=\"${2:msgInterval}\">
  </amexio-notification>
  <amexio-button
    \t (onClick)=\"${3:FunctionName}()\"
    \t [label]=\"'${4:label}'\"
    \t [type]=\"'${5:type}'\"
    \t [tooltip]=\"'${6:toolTip}'\">
  </amexio-button>
  '''
    description: "Top Right Notification"
  "amexio-notification-bottom-left":
    prefix: "amexio-notification-bottom-left"
    body: '''
  <amexio-notification
    \t [data]=\"${1:data}\"
    \t [vertical-position]=\"'bottom'\"
    \t [horizontal-position]=\"'left'\"
    \t [auto-dismiss-msg]=\"true\"
    \t [auto-dismiss-msg-interval]=\"${2:msgInterval}\">
  </amexio-notification>
  <amexio-button
    \t (onClick)=\"${3:functionName}()\"
    \t [label]=\"'${4:label}'\"
    \t [type]=\"'${5:type}'\"
    \t [tooltip]=\"'${6:toolTip}'\">
  </amexio-button>
  '''
    description: "Bottom Left Notification"
  "amexio-notification-bottom-right":
    prefix: "amexio-notification-bottom-right"
    body: '''
  <amexio-notification
    \t [data]=\"${1:data}\"
    \t [vertical-position]=\"'bottom'\"
    \t [horizontal-position]=\"'right'\"
    \t [auto-dismiss-msg]=\"true\"
    \t [auto-dismiss-msg-interval]=\"${2:msgInterval}\">
  </amexio-notification>
  <amexio-button
    \t(onClick)=\"${3:functionName}()\"
    \t [label]=\"'${4:label}'\"
    \t [type]=\"'${5:type}'\"
    \t [tooltip]=\"'${6:toolTip}'\">
  </amexio-button>
  '''
    description: "bottom right notification"
  "amexio-paginator-page-size":
    prefix: "amexio-paginator-page-size"
    body: '''
  <amexio-paginator
    \t [pages]=\"${1:pages}\"
    \t [rows]=\"${2:rows}\"
    \t (onPageChange)=\"${3:clickfunction(\\$event)}\">
  </amexio-paginator>
  '''
    description: "paginator with page size 10-"
  "amexio-progress-bar":
    prefix: "amexio-progress-bar"
    body: '''
  <amexio-row>
    \t <amexio-column
    \t [size]=\"${1:size}\">
    \t\t <amexio-progress-bar
    \t\t\t [current-value]=\"'${2:currentValue}'\"
    \t\t\t [infinite]=\"false\"
    \t\t\t type=\"${3:type}\">
    \t\t </amexio-progress-bar>
    \t </amexio-column>
  </amexio-row>
  '''
    description: "Progress bar"
  "amexio-chart-area":
    prefix: "amexio-chart-area"
    body: '''
  <amexio-chart-area[data]=\"${1:data}\"
    \t\t\t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t\t\t[width]=\"'${3:width}'\" >
    \t<amexio-chart-title [title]=\"'${4:tilte}'\">
    \t</amexio-chart-title>
    \t<amexio-chart-legend [legendposition]=\"'${5:position}'\">
    \t</amexio-chart-legend>
    \t</amexio-chart-area>
  '''
    description: "Amexio chart area"
  "amexio-chart-bar":
    prefix: "amexio-chart-bar"
    body: '''
  <amexio-chart-bar [data]=\"${1:data}\"
    \t\t\t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t\t\t[width]=\"'${3:width%}'\">
    \t <amexio-chart-title [title]=\"'${4:title}'\">
    \t</amexio-chart-title>
    \t <amexio-chart-legend [position]=\"'${5:position}'\">
    \t</amexio-chart-legend>
    \t</amexio-chart-bar>
  '''
    description: "Amexio Chart Bar"
  "amexio-chartbar-stack":
    prefix: "amexio-chartbar-stack"
    body: '''
  <amexio-chart-bar [data]=\"${1:data}\"
  [height]=\"'${2:height}'\"
  [width]=\"'${3:width}'\"
  [stacked]=\"true\">
    \t <amexio-chart-title [title]=\"'${5:title}'\">
    \t</amexio-chart-title>
    \t<amexio-chart-legend [position]=\"'${6:position}'\">
    \t</amexio-chart-legend>
    \t</amexio-chart-bar>
  '''
    description: "Amexio chartbar Stack"
  "amexio-chart-bubble":
    prefix: "amexio-chart-bubble"
    body: '''
  <amexio-chart-bubble [height]=\"'${1:height}'\"
    \t\t\t\t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t\t\t\t[data]=\"${3:Data}\">
    \t\t\t\t\t\t\t\t<amexio-chart-title [title]=\"'${4:title}'\">
    \t\t\t\t\t\t\t </amexio-chart-title>
    \t\t\t\t\t<amexio-chart-horizontal-axis [title]=\"'${5:Horizontal-axis}'\">
    \t\t\t\t\t\t\t</amexio-chart-horizontal-axis>
    \t\t\t\t\t\t\t<amexio-chart-vertical-axis [title]=\"'${6:Vertical-axis}'\">
    \t\t\t\t\t\t\t</amexio-chart-vertical-axis>
    \t</amexio-chart-bubble>
  '''
    description: "Amexio Bubble chart"
  "amexio-chart-bubble-color":
    prefix: "amexio-chart-bubble-color"
    body: '''
  <amexio-chart-bubble [height]=\"'${1:height}'\"
    \t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t[data]=\"${3:data}\"
    \t [axis-color]=\"['yellow', 'red']\">
  </amexio-chart-bubble>
  '''
    description: "Amexio-chart-bubble-color"
  "amexio-chart-candlestick":
    prefix: "amexio-chart-candlestick"
    body: '''
  <amexio-chart-candlestick [width]=\"'${1:width}'\"
    \t\t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t\t[data]=\"${3:candlestickChartData}\">
    \t<amexio-chart-title [title]=\"'${4:Stock Statistics}'\">
    \t</amexio-chart-title>
    \t</amexio-chart-candlestick>
  '''
    description: "Amexio Candlestick chart"
  "amexio-chart-candlestick-waterfall":
    prefix: "amexio-chart-candlestick-waterfall"
    body: '''
  <amexio-chart-candlestick-waterfall [width]=\"'${1:width}'\"
    \t\t\t\t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t\t\t\t[data]=\"${3:candlestickWaterfallChart}\"
    \t\t\t\t\t\t\t\t[bar-width]=\"'${4:bar-width}'\"
    \t\t\t\t\t\t\t\t[falling-color]=\"'${5:falling-color}'\"
    \t\t\t\t\t\t\t\t[rising-color]=\"'${6:rising-color}'\">
    \t<amexio-chart-title [title]=\"'${7:title}'\">
    \t</amexio-chart-title>
  </amexio-chart-candlestick-waterfall>
  '''
    description: "Amexio Candlestick Waterfall Chart"
  "amexio-chart-columnbar":
    prefix: "amexio-chart-columnbar"
    body: '''
  <amexio-chart-column [data]=\"${1:Data}\"
    \t\t\t\t\t\t\t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t\t\t\t\t\t[width]=\"'${3:width}'\"
    \t\t\t\t\t\t\t\t\t\t[stacked]=\"true\">
    \t<amexio-chart-title [title]=\"'${5:title}'\">
    \t</amexio-chart-title>
    \t<amexio-chart-legend [position]=\"'${6:position}'\">
    \t</amexio-chart-legend>
  </amexio-chart-column>
  '''
    description: "Amexio chart ColumnBar"
  "amexio-chart-combo":
    prefix: "amexio-chart-combo"
    body: '''
    \t<amexio-chart-combo [height]=\"'${1:height}'\"
    \t\t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t\t[data]=\"${3:Data}\">
    \t<amexio-chart-title [title]=\"'${4:title}'\">
    \t</amexio-chart-title>
    \t<amexio-chart-legend [position]=\"'${5:position}'\">
    \t</amexio-chart-legend>
    \t<amexio-chart-horizontal-axis [title]=\"'${6:title}'\">
    \t</amexio-chart-horizontal-axis>
    \t<amexio-chart-vertical-axis [title]=\"'${7:title}'\">
    \t</amexio-chart-vertical-axis>
    \t</amexio-chart-combo>
  '''
    description: "Amexio Combo Chat"
  "amexio-chart-donut":
    prefix: "amexio-chart-donut"
    body: '''
    \t<amexio-chart-donut [height]=\"'${1:height}'\"
    \t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t[data]=\"${3:Data}\">
    \t<amexio-chart-title [title]=\"'${4:title}'\">
    \t</amexio-chart-title>
    \t<amexio-chart-legend [position]=\"'${5:position}'\">
    \t</amexio-chart-legend>
    \t</amexio-chart-donut>
  '''
    description: "Amexio Donut Chart "
  "amexio-chart-histogram":
    prefix: "amexio-chart-histogram"
    body: '''
    \t<amexio-chart-histogram [height]=\"'${1:height}'\"
    \t\t\t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t\t\t[data]=\"'${3:Data}'\">
    \t<amexio-chart-title [title]=\"'${4:title}'\">
    \t</amexio-chart-title>
    \t</amexio-chart-histogram>
  '''
    description: "Amexio Histrogram Chart"
  "amexio-chart-line":
    prefix: "amexio-chart-line"
    body: '''
  <amexio-chart-line [data]=\"${1:data}\"
    \t\t\t\t\t[height]=\"'${2:height}'\"
    \t\t\t\t\t[width]=\"'${3:width}'\" >
    \t<amexio-chart-legend [position]=\"'${4:position}'\">
    \t</amexio-chart-legend>
  </amexio-chart-line>
  '''
    description: "Amexio line Chart"
  "amexio-chart-pie":
    prefix: "amexio-chart-pie"
    body: '''
  <amexio-chart-pie [height]=\"'${1:height}'\"
    \t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t[data]=\"${3:data}\">
    \t\t<amexio-chart-title [title]=\"'${4:title}'\">
    \t\t</amexio-chart-title>
    \t\t<amexio-chart-legend [position]=\"'${5:position}'\">
    \t\t</amexio-chart-legend>
  </amexio-chart-pie>
  '''
    description: "Amexio Pie Chart"
  "amexio-chart-3Dpie":
    prefix: "amexio-chart-3Dpie"
    body: '''
  <amexio-chart-pie [height]=\"'${1:height}'\"
    \t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t[is3d]=\"true\"
    \t\t\t\t\t[data]=\"${4:data}\">
    \t\t<amexio-chart-title [title]=\"'${5:title}'\">
    \t\t</amexio-chart-title>
    \t\t<amexio-chart-legend [position]=\"'${6:position}'\">
    \t\t</amexio-chart-legend>
  </amexio-chart-pie>
  '''
    description: "Amexio 3DPie Chart"
  "amexio-chart-Scatter":
    prefix: "amexio-chart-Scatter"
    body: '''
  <amexio-chart-scatter [height]=\"'${1:height}'\"
    \t\t\t\t\t[data]=\"${2:data}\">
    \t\t<amexio-chart-title [title]=\"'${3:title}'\">
    \t\t</amexio-chart-title>
    \t\t<amexio-chart-horizontal-axis [title]=\"'${4:title}'\">
    \t\t</amexio-chart-horizontal-axis>
    \t\t<amexio-chart-vertical-axis [title]=\"'${5:title}'\">
    \t\t</amexio-chart-vertical-axis>
  </amexio-chart-scatter>
  '''
    description: "Amexio Scatter Chart"
  "amexio-chart-Timeline":
    prefix: "amexio-chart-timeline"
    body: '''
  <amexio-chart-timeline [data]=\"${1:Data}\"
    \t\t\t\t\t\t[width]=\"'${2:width}'\">
  </amexio-chart-timeline>
  '''
    description: "Amexio Timeline Chart"
  "amexio-chart-gauge":
    prefix: "amexio-chart-gauge"
    body: '''
  <amexio-dashboard-gauge [height]=\"'${1:height}'\"
    \t\t\t\t\t\t[data]=\"${2:data}\"
    \t\t\t\t\t\t[red-color-from]=\"${3:red-color-from}\"
    \t\t\t\t\t\t[red-color-to]=\"${4:red-color-to}\"
    \t\t\t\t\t\t[yellow-color-from]=\"${5:yellow-color-from}\"
    \t\t\t\t\t\t[yellow-color-to]=\"${6:yellow-color-to}\"
    \t\t\t\t\t\t[scale-value]=\"${7:scale-value}\">
  </amexio-dashboard-gauge>
  '''
    description: "Amexio Gauge Chart"
  "amexio-datapoints":
    prefix: "amexio-datapoints"
    body: '''
  <amexio-datapoints [west]=\"true\"[center]=\"true\"[east]=\"true\"
    \t[south]=\"true\">
    \t<amexio-west [contentalign]=\"'center'\"[c-class]=\"'datapoint-west'\">
    \t<amexio-image [icon-class]=\"'${7:icon-class}'\">
    \t</amexio-image>
    \t</amexio-west>
    \t<amexio-center [contentalign]=\"'center'\">
    \t<amexio-label size=\"${8:size}\">data</amexio-label><br/>
    \t<amexio-label size=\"${9:size}\">data</amexio-label>
    \t</amexio-center>
    \t<amexio-south [contentalign]=\"'center'\">
    \t<amexio-label>contents</amexio-label>
    \t</amexio-south>
    </amexio-datapoints>
  '''
    description: "Amexio Datapoint"
  "amexio-map-chart-geo":
    prefix: "amexio-map-chart-geo"
    body: '''
  <amexio-map-geo-chart [height]=\"'${1:height}'\"
    \t\t\t\t\t[width]=\"'${2:width}'\"
    \t\t\t\t\t[data]=\"${3:data}\">
  </amexio-map-geo-chart>
  '''
    description: "Amexio Geo chart map"
  "amexio-map-chart-tree":
    prefix: "amexio-map-chart-tree"
    body: '''
  <amexio-map-treemap [title]=\"'${1:title}'\"
    \t[height]=\"'${2:height}'\"
    \t[width]=\"'${3:width}'\"
    \t[data]=\"${4:data}\"
    \t[max-color]=\"'${5:max-color}'\"
    \t[mid-color]=\"'${6:mid-color}'\"
    \t[min-color]=\"'${7:min-color}'\"
    \t[max-post-depth]=\"'${8:max-post-color}'\"
    \t[show-scale]=\"true\">
  </amexio-map-treemap>
  '''
    description: "Amexio Tree chart Map"
  "amexio-enterprise-media-content":
    prefix: "amexio-enterprise-media-content"
    body: '''
  <amexio-ee-content
    \t[bg-image-url]=\"'${1:imageurl}'\"
    \t[title]=\"'${2:title}'\"
    \t[description]=\"'${3:content}'\"
    \t[contents]=\"${4:content}\"
    \t[link]=\"'${5:link}'\"
    \t[match-percentage]=\"'${6:matchpercentage}'\"
    \t[age-limit]=\"'${7:age-limit}'\"
    \t[release-year]=\"'${8:release-year}'\"
    \t[seasonNo]=\"${9:seasonNo}\"
    \t[rate]=\"${10:rate}\"
    \t[max]=\"${11:max}\"
    \t[watch]=\"true\"
    \t[my-list]=\"true\">
  </amexio-ee-content>
  '''
    description: "Amexio Media content Enterprise"
  "amexio-enterprise-video-player":
    prefix: "amexio-enterprise-video-player"
    body: '''
  <amexio-ee-youtube-player url=\"${1:url}\"
    \t[height]=\"${2:height}\">
  </amexio-ee-youtube-player>
  '''
    description: "Amexio Video player Enterprise"
  "amexio-enterprise-video-player-with-width":
    prefix: "amexio-enterprise-video-player-with-width"
    body: '''
  <amexio-ee-youtube-player url=\"${1:url}\"
    \t[height]=\"${2:height}\"
    \t[width]=\"${3:width}\">
  </amexio-ee-youtube-player>
  '''
    description: "Amexio Video player with width Enterprise"
  "amexio-data-item-selector":
    prefix: "amexio-data-item-selector"
    body: '''
  <amexio-item-selector [height]=\"'${1:height}'\"
  [display-field]=\"'${2:field1}'\"
  [value-field]=\"'${3:field2}'\"
    \t(selectedRecords)=\"${4:getSelectedData}($event)\"
    \t[http-url]=\"'${5:path}'\"
    \t[http-method]=\"'get'\"
    \t[data-reader]=\"'${6:data}'\">
  </amexio-item-selector>
  '''
    description: "Amexio Item Data Selector"
  "amexio-data-grid-simple":
    prefix: "amexio-data-grid-simple"
    body: '''
  <amexio-datagrid
    \t[enable-column-fiter]=\"true\"  title=\"'${1:title}'\"
    \t[http-method]=\"'get'\"
    \t[http-url]=\"'${2:path}'\"
    \t[data-reader]=\"'${3:data}'\"
    \t[page-size] = \"${4:page-size}\"
    \t(selectedRowData)=\"${5:onSelectRow}($event)\">
    \t<amexio-data-table-column [data-index]=\"'${6:columnName}'\"
    \t\t\t\t\t\t\t[data-type]=\"'string'\" [hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${7:Name}'\">
    \t</amexio-data-table-column>
    \t</amexio-datagrid>
  '''
    description: "Amexio Simple Data Grid "
  "amexio-data-grid-column":
    prefix: "amexio-data-grid-column"
    body: '''
    \t<amexio-data-table-column [data-index]=\"'${6:columnName}'\"
    \t\t\t\t\t\t\t[data-type]=\"'string'\" [hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${7:Name}'\">
  </amexio-data-table-column>
  '''
    description: "Amexio Data Grid Column "
  "amexio-data-grid-templete":
    prefix: "amexio-data-grid-columnsize"
    body: '''
  <amexio-datagrid  title=\"'${1:title}'\"
    \t[http-method]=\"'get'\"
    \t[http-url]=\"'${2:path}'\"
    \t[data-reader]=\"'${3:data}'\"
    \t[page-size] = \"${4:pagesize}\"
    \t[enable-data-filter]=\"false\"
    \t(rowSelect)=\"'${5:getRowData}($event)'\">
    \t<amexio-data-table-column [width]=\"${6:width}\"
    \t\t\t\t\t\t\t[data-index]=\"'${7:name_official}'\"
    \t\t\t\t\t\t\t[data-type]=\"'string'\" [hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${8:Name}'\">
    \t\t\t\t\t\t\t<ng-template #amexioBodyTmpl let-column let-row=\"${9:row}\">
    \t\t\t\t\t\t\t<span>
    \t\t\t\t\t\t\t<amexio-image [path]=\"${10:path}\">
    \t\t\t\t\t\t\t</amexio-image>
    \t\t\t\t\t\t\t{{row.name}} ( {{row.name_official}} )
    \t\t\t\t\t\t\t</span>
    \t\t\t\t\t\t\t</ng-template>
    \t</amexio-data-table-column>
    \t<amexio-data-table-column [width]=\"${11:width}\"
    \t\t\t\t\t\t\t[data-index]=\"'${12:latitude}'\"
    \t\t\t\t\t\t\t[data-type]=\"'string'\"
    \t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${13:Latitude}'\">
    \t</amexio-data-table-column>
    \t<amexio-data-table-column [width]=\"${14:width}\"
    \t\t\t\t\t\t\t[data-index]=\"'${15:longitude}'\"
    \t\t\t\t\t\t\t[data-type]=\"'${16:number}'\"
    \t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${17:Longitude}'\">
    \t</amexio-data-table-column>
    \t</amexio-datagrid>
  '''
    description: "Amexio columnsize Grid Data [datatype] :: string : number"
  "amexio-data-grid-filter":
    prefix: "amexio-data-grid-filter"
    body: '''
  <amexio-datagrid
    \t[title]=\"'${1:Employee Data}'\"
    \t[page-size] = \"'${2:page-size}'\"
    \t[data-reader]=\"'${3:data}'\"
    \t[http-url]=\"'${4:path}'\"
    \t[http-method]=\"'get'\"
    \t[enable-data-filter]=\"true\"
    \t(selectedRowData)=\"${5:onRowSelect}($event)\">
    \t\t<amexio-data-table-column [data-index]=\"'${6:preferredFullName}'\"
    \t\t\t\t\t\t\t\t[data-type]=\"'string'\"
    \t\t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t\t[text]=\"'${7:text}'\">
    \t\t</amexio-data-table-column>
  </amexio-datagrid>
  '''
    description: "Amexio Filter Grid Data [datatype]::string :number"
  "amexio-data-groupby-grid":
    prefix: "amexio-data-groupby-grid"
    body: '''
  <amexio-datagrid
    \t[title]=\"'${1:Employee Data}'\"
    \t[page-size] =\"${2:page-size}\"
    \t[data-reader]=\"'${3:data}'\"
    \t[groupby]=\"true\"
    \t[groupby-data-index]=\"'${4:jobTitle}'\"
    \t[http-url]=\"'${5:path}'\"
    \t[http-method]=\"'get'\"
    \t(selectedRowData)=\"${6:onRowSelect}($event)\">
    \t<amexio-data-table-column [data-index]=\"'${7:preferredFullName}'\"
    \t\t\t\t\t\t\t\t[data-type]=\"'string'\"
    \t\t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t\t[text]=\"'${8:FullName}'\">
    \t</amexio-data-table-column>
  </amexio-datagrid>
  '''
    description: "Amexio data grid Groupby"
  "amexio-Scroll-data-groupby":
    prefix: "amexio-data-scroll-groupby"
    body: '''
  <amexio-datagrid
    \t[enable-column-fiter]=\"true\" [height]=\"${1:height}\"
    \t[title]=\"${2:title}\"
    \t[enable-checkbox]=\"false\"
    \t[http-method]=\"'get'\"
    \t[http-url]=\"'${3:path}'\"
    \t[data-reader]=\"'${4:data}'\"
    \t[page-size] = \"${5:page-size}\">
    \t<amexio-data-table-column [data-index]=\"'${6:dataindex}'\"
    \t\t\t\t\t[data-type]=\"'string'\"
    \t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t[text]=\"'Name'\">
    \t</amexio-data-table-column>
  </amexio-datagrid
  '''
    description: "Amexio Data Groupby Scroll"
  "amexio-treedata-grid":
    prefix: "amexio-treedata-grid"
    body: '''
  <amexio-tree-data-table
    \t[http-method]=\"'get'\"
    \t[http-url]=\"'${1:path}'\"
    \t[data-reader]=\"'${2:data}'\"
    \t(selectedRecord)=\"${3:getSelectedData}($event)\">
    \t<amexio-data-table-column
    \t\t\t\t\t\t\t[data-index]=\"'${4:user}'\"
    \t\t\t\t\t\t\t[data-type]=\"'string'\"
    \t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'User'\">
    \t</amexio-data-table-column>
    \t<amexio-data-table-column
    \t\t\t\t\t\t\t[data-index]=\"'${5:duration}'\"
    \t\t\t\t\t\t\t[data-type]=\"'number'\"
    \t\t\t\t\t\t\t[hidden]=\"false\"
    \t\t\t\t\t\t\t[text]=\"'${6:Duration}'\">
    \t</amexio-data-table-column>
  </amexio-tree-data-table>
  '''
    description: "Amexio Data TreeGrid"
  "amexio-treeview":
    prefix: "amexio-treeview"
    body: '''
  <amexio-treeview [data-reader]=\"'${1:data}'\"
    \t\t\t\t\t\t\t\t[data]=\"${2:treeLocalData}\"
    \t\t\t\t\t\t\t\t(nodeClick)=\"${3:getNodeData}($event)\">
  </amexio-treeview>
  '''
    description: "Amexio  Data Treeview"
  "amexio-treeview-template":
    prefix: "amexio-treeview-template"
    body: '''
    \t<amexio-treeview [data-reader]=\"'${1:data}'\"
    \t\t\t\t\t\t[http-url]=\"'${2:path}'\"
    \t\t\t\t\t\t[http-method]=\"'get'\"
    \t\t\t\t\t\t(nodeClick)=\"${3:getNodeData}(\\$event)\">
    \t\t<ng-template #amexioTreeTemplate let-tree let-icon=\"${4:icon}\"
    \t\t\t\t\t\tlet-node=\"node\">
    \t<i [attr.class]=\"node.icon\">
    \t</i> &nbsp; &nbsp;&nbsp;{{tree.text}}
    \t</ng-template>
    \t</amexio-treeview>
  '''
    description: "Amexio tree view with template"
  "amexio-tree-filter-view":
    prefix: "amexio-tree-filter-view"
    body: '''
  <amexio-tree-filter-view [data-reader]=\"'${1:data}'\"
    \t\t\t\t\t\t\t[http-method]=\"'get'\"
    \t \t\t\t\t\t(selectedRecord)=\"${2:getNodeData}(\\$event)\"
    \t\t\t\t\t\t\t[http-url]=\"'${3:path}'\">
  </amexio-tree-filter-view>
  '''
    description: "Amexio filter Tree View Data"
  "amexio-tree-checkbox":
    prefix: "amexio-tree-checkbox"
    body: '''
  <amexio-treeview [enable-checkbox]=\"true\"
    \t\t\t\t\t\t\t\t[data-reader]=\"'${1:data}'\"
    \t\t\t\t\t\t\t\t[data]=\"${2:treeLocalData}\"
    \t (onTreeNodeChecked)=\"${3:getNodeData}(\\$event)\">
  </amexio-treeview>
  '''
    description: "Amexio tree checbox"
  "amexio-treeview-horizontal":
    prefix: "amexio-tree-horizontal"
    body: '''
  <amexio-horizontal-treeview [data-reader]=\"'${1:data}'\"
    \t\t\t\t\t\t\t\t[http-method]=\"'get'\"
    \t\t\t\t\t\t\t\t[label]=\"'${2:Menu}'\"
    \t\t\t\t\t\t\t\t(nodeClick)=\"${3:getNodeData}(\\$event)\"
    \t\t\t\t\t\t\t\t[http-url]=\"'${4:path}'\">
  </amexio-horizontal-treeview>
  '''
    description: "Amexio TreeView Horizontal"
  "amexio-data-listbox":
    prefix: "amexio-data-listbox"
    body: '''
  <amexio-listbox [enable-checkbox]=\"true\"
    \t\t\t\t\t[height]=\"${1:height}\"
    \t\t\t\t\t[header]=\"'${2:Contacts}'\"
    \t\t\t\t\t[search-placeholder]=\"'${3:Search Contacts}'\"
    \t\t\t\t\t[data]=\"'${4:localData}'\"
    \t\t\t\t\t[filter]=\"true\"
    \t\t\t\t\t[data-reader]=\"'${5:response.data}'\"
    \t\t\t\t\t[display-field]=\"'${6:diaplayField}'\"
    \t\t\t\t\t(selectedRows)=\"'${getSelectedData}(\\$event)\">
  </amexio-listbox>
  '''
    description: "amexio data listbox"
  "amexio-listbox-template":
    prefix: "amexio-listbox-template"
    body: '''
  <amexio-listbox [height]=\"'${1:height}'\"
    \t\t\t\t\t[header]=\"'${2:Contacts}'\"
    \t\t\t\t\t[search-placeholder]=\"'${3:Search Contacts}'\"
    \t\t\t\t\t[data]=\"${3:localData}\"
    \t\t\t\t\t[filter]=\"'false'\"
    \t\t\t\t\t[enable-checkbox]=\"'false'\"
    \t\t\t\t\t[data-reader]=\"'${4:response.data}'\"
    \t\t\t\t\t[display-field]=\"'${5:name}'\"
    \t\t\t\t\t(onRowClick)=\"'${onRowClick}(\\$event)'\">
    \t\t\t\t\t<ng-template #amexioBodyTmpl let-row=\"row\">
  <amexio-row>
    \t\t\t\t\t<amexio-column
    \t\t\t\t\t\t\t[size]=\"'${6:size}'\">
    \t\t\t\t\t\t\t\t\t\t<amexio-image [c-class]=\"'${7:around-image}'\"
    \t\t\t\t\t\t\t\t\t\t\theight=\"'${8:height}'\"
    \t\t\t\t\t\t\t\t\t\t\twidth=\"'${9:width}'\"
    \t\t\t\t\t\t\t\t\t\t\tpath=\"${10:path/{{row.profile}}\">
    \t\t\t\t\t\t\t\t\t\t</amexio-image>
    \t\t\t\t\t</amexio-column>
    \t\t\t\t\t<amexio-column
    \t\t\t\t\t\t\t[size]=\"'${11:size}'\">{{json}}
    \t\t\t\t\t\t\t{{row.name}}
    \t\t\t\t\t</amexio-column>
  </amexio-row>
  </ng-template>
  </amexio-listbox>
  '''
    description: "Amexio listbox template"
  "amexio-chart-column":
    prefix: "amexio-chart-column",
    body: '''
   <amexio-chart-column [data]=\"${columnChartData}\"
   \t\t\t\t\t\t\t\t\t\t\t[height]=\"'${2:height}'\"
   \t\t\t\t\t\t\t\t\t\t\t[width]=\"'${3:width}'\">
   \t<amexio-chart-title [title]=\"'${4:title}'\">
   \t</amexio-chart-title>
   \t<amexio-chart-legend [position]=\"'${5:position}'\">
   </amexio-chart-legend>
   \t</amexio-chart-column>
   '''
    description: "Amexio chart column"
  "amexio-navbar":
    prefix: "amexio-navbar"
    body: '''
  <amexio-nav [title]=\"'${1:title}'\"
  \t[logo]=\"'${2:logo}'\">
  \t\t<amexio-nav-item position-center
  \t\t*ngFor=\"let topMenu of ${3:topMenuData}\">
  \t\t\t<a style=\"padding-left: 30px;color: white;text-decoration:none;cursor:
  \t\t\t\tpointer\"
  \t\t\t[target]=\"topMenu.label == 'Home' ? '' : '_blank'\">
  \t\t\t{{topMenu.label}}</a>
  \t\t</amexio-nav-item>
  "</amexio-nav>"
  '''
    description: "Amexio Navbar "
  "amexio-enterprise-multi-item-carousel":
    prefix: "amexio-enterprise-multi-item-carousel"
    body: '''
  <amexio-media-ee-carousel title=\"${1:title}\"
  \t[data]=\"${2:data}\">
  </amexio-media-ee-carousel>
  '''
    description: "Amexio Enterprise multi item horizontal"
  "amexio-enterprise-multi-item-vertical-carousel":
    prefix: "amexio-enterprise-multi-item-carosel-vertical"
    body: '''
  <amexio-media-ee-carousel title=\"${1:title}\"
  \tcarousel-type=\"vertical\"
  \t[data]=\"${2:data}\">
  </amexio-media-ee-carousel>
   '''
    description: "Amexio Enterprise multi item vertical"

# Generated with Atomizr – https://atom.io/packages/atomizr
'.source.ts':
  "Amexio Accordion":
    prefix: "Amexio-ts-Accordion"
    description: "Amexio Accordion"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Border Layout":
    prefix: "Amexio-ts-Border-Layout"
    description: "Amexio Border-Layout"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Column":
    prefix: "Amexio-ts-Column"
    description: "Amexio Column"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Card":
    prefix: "Amexio-ts-Card"
    description: "Amexio Card"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Row":
    prefix: "Amexio-ts-Row"
    description: "Amexio Row"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Carousel":
    prefix: "Amexio-ts-Carousel"
    description: "Amexio Carousel"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Fieldset":
    prefix: "Amexio-ts-Fieldset"
    description: "Amexio Fieldset"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Panel":
    prefix: "Amexio-ts-Panel"
    description: "Amexio Panel"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Steps":
    prefix: "Amexio-ts-Steps"
    description: "Amexio Steps"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Tab":
    prefix: "Amexio-ts-Tab"
    description: "Amexio Tab"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Window":
    prefix: "Amexio-ts-Window"
    description: "Amexio Window"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  showBasicWindow : boolean;
  showMaxWindow : boolean;
  showClosable : boolean;
  \tconstructor() {
   }

  toggleBasicWindow(){
  \tthis.showBasicWindow = !this.showBasicWindow;
  }
  toggleMaxWindow(){
  \tthis.showMaxWindow = !this.showMaxWindow;
  }
  toggleClosable(){
  \tthis.showClosable = !this.showClosable;
  }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Dialogue":
    prefix: "Amexio-ts-Dialogue"
    description: "Amexio Dialogue"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {

  showDialog: boolean;
  confirmDialog: boolean;
  errorDialog: boolean;
  warningDialog: boolean;
  helpDialog: boolean;
  customDialog: boolean;

  \tconstructor() {}
  toggleConfirm() {
  \tthis.confirmDialog = !this.confirmDialog;
  }
  toggleError() {
  \tthis.errorDialog = !this.errorDialog;
  }
  toggleWarning() {
  \tthis.warningDialog = !this.warningDialog;
  }
  toggleHelp() {
  \tthis.helpDialog = !this.helpDialog;
  }
  toggleCustom() {
  \tthis.customDialog = !this.customDialog;
  }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Image":
    prefix: "Amexio-ts-Image"
    description: "Amexio Image"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Video":
    prefix: "Amexio-ts-Video"
    description: "Amexio Video"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import { AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Dockbar":
    prefix: "Amexio-ts-Dockbar"
    description: "Amexio Dockbar"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import { AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Navbar":
    prefix: "Amexio-ts-Navbar"
    description: "Amexio Navbar"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import { AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  ${4:topMenuData}:any;
  \tconstructor() {
  \t\tthis.topMenuData = JSON.parse(`[
  \t\t{
  \t\t\t\"label\" : \"${5}\
  \t\t}
  \t\t{
  \t\t\t\"label\" : \"${5}\
  \t\t}
  \t\t{
  \t\t\t\"label\" : \"${5}\
  \t\t}
  ]
  `);
  }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Menubar":
    prefix: "Amexio-ts-Menubar"
    description: "Amexio Menubar"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import { AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';

  @Component({
  \tselector: '${1:selector-name}',
  \ttemplateUrl: '${2:name}.component.html'
  })

  @NgModule({
  imports: [AmexioWidgetModule],
  exports: [],
  declarations : []
  })
  export class ${3:Name}Component implements OnInit {
  \tconstructor() { }

  \tngOnInit() { }$0
  }
  '''
  "Amexio Checkbox":
    prefix: "Amexio-ts-Checkbox"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:selectorName}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit{
  \t constructor(){ }
  \t //Checkbox click event
  \t ${5:functionName}(${6:data}:any){
  \t //add Some Operation
  \t\t\t\t\t\t }
  \t ngOnInit() { }
  \t\t\t\t\t\t\t\t\t\t\t}
  '''
    description: "Simple Checkbox typescript code"
  "Amexio Checkbox Group":
    prefix: "Amexio-ts-Checkbox-Group"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t //selected Checkbox event
  \t ${5:functionName}(${6:data}:any){
  \t //make some operation here
  \t\t\t\t\t\t }
  \t ngOnInit() { }
  \t\t\t\t\t\t\t\t\t\t\t}
  '''
    description: "Chechkbox Group"
  "Amexio Date Time Picker":
    prefix: "Amexio-ts-Date-Time-Picker"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t time: any;
  ${5:functionName}(${6:data}:any){
  \t //make some operation here
  \t\t\t\t\t\t}
  \t ngOnInit() { }
  \t\t\t\t\t\t\t\t\t\t\t }
  '''
    description: "Date-time-picker"
  "Amexio Dropdown":
    prefix: "Amexio-ts-Dropdown"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ${5:functionName}(${6:data}:any){
  \t //make some operation here "
  \t\t\t\t\t\t\t}
  \t ngOnInit() { }
  \t\t\t\t\t\t\t\t\t\t\t  }
  '''
    description: "Basic dropdown list "
  "Amexio Dropdown Filter":
    prefix: "Amexio-ts-Dropdown-Filter"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t ${5:functionName}(${6:data}:any){
  \t //make some operation here
  \t\t\t\t\t\t\t }
  \t\t  }
  '''
    description: "Dropdown list"
  "Amexio-ts-dropdown-multiselect":
    prefix: "Amexio-ts-dropdown-multiselect"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t\t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t\t  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t ${5:functionName}(${6:data}:any){
  \t //make some operation here"
  \t\t}
  }
  '''
    description: "Dropdown multielect"
  "Amexio-ts-Email-Field":
    prefix: "Amexio-ts-Email-Field"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })
  \t export class ${4:className} implements OnInit
  {
  \t constructor(){ }
  \t ngOnInit() { }
  }
  '''
    description: "Email field"
  "Amexio-ts-File-Upload":
    prefix: "Amexio-ts-File-Upload"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t  })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
   }
  '''
    description: "File upload"
  "Amexio-ts-Number-Field":
    prefix: "Amexio-ts-Number-Field"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  }
  '''
    description: "Number Field"
  "Amexio-ts-Password-Field":
    prefix: "Amexio-ts-Password-Field"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  }
  '''
    description: "Password field"
  "Amexio-ts-Radio-Group":
    prefix: "Amexio-ts-Radio-Group"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t\t})
  \texport class ${1:name} implements OnInit {
  \t ${2:name}: any;
  \t constructor(){
  \t this.$2 = ${3:value1}
  \t}
  \t //selected Checkbox event"
  \t ${4:functionName}(data:any){
  \t//make some operation here"
  \t }
  \t ngOnInit() { }
  \t}
  '''
    description: "Radio group"
  "Amexio-ts-Rating":
    prefix: "Amexio-ts-Rating"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [IconLoaderService]
  \t})
  \t export class ${4:className} implements OnInit {
  \t public ${5:name}:number = 10;
  \t constructor(){ }
  \t ngOnInit() { }
  }
  '''
    description: "Ratings"
  "Amexio-ts-Slider":
    prefix: "Amexio-ts-Slider"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Slider"
  "Amexio-ts-Typeahead":
    prefix: "Amexio-ts-Typeahead"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Typeahead options"
  "Amexio-ts-Tag-Field":
    prefix: "Amexio-ts-Tag-Field"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t ${5:variableName}:string;
  \t constructor(){ }
  \t ${6:functionName}(${7:data}:any){
  \t //make some operation here"
  \t this.${5:variableName}=data ;
  \t}
  \t ngOnInit() { }
  \t}
  '''
    description: "Tag Field"
  "Amexio-ts-Text-Field":
    prefix: "Amexio-ts-Text-Field"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Text Field"
  "Amexio-ts-Text-Area":
    prefix: "Amexio-ts-Text-Area"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Text area"
  "Amexio-ts-Toggle":
    prefix: "Amexio-ts-Toggle"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t //Toggle click event"
  \t ${5:functionName}(${6:data}:any){}
  \t //make some operation in toggle click"
  \t ngOnInit() { }
  \t}
  '''
    description: "toggle button"
  "Amexio-ts-Button":
    prefix: "Amexio-ts-Button"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t })
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Button"
  "Amexio-ts-Button-Group":
    prefix: "Amexio-ts-Button-Group"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Button group"
  "Amexio-ts-Button-Dropdown":
    prefix: "Amexio-ts-Button-Dropdown"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Button dropdown"
  "Amexio-ts-Notification":
    prefix: "Amexio-ts-Notification"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t MessageArray:any=[];
  \t constructor(){ }
  \t functionName(){
  \t this.topMessageArray.push('${5:message} ')}
  \t ngOnInit() { }
  \t}
  '''
    description: "Notification can raise messages for particular time"
  "Amexio-ts-Paginator":
    prefix: "Amexio-ts-Paginator"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t //paginator onPageChange event"
  \t ${5:functionName}(${6:data}:any){
  \t //add Some Operation"
  \t\t}
  \t ngOnInit() { }
  \t}
  '''
    description: "Paginator"
  "Amexio-ts-Progressbar":
    prefix: "Amexio-ts-Progressbar"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  import {NgModule} from '@angular/core';
  \t @Component({
  \t selector: '${1:name}',
  \t templateUrl: '${2:name}.component.html',
  \t styleUrls: ['${3:name}.component.css']
  \t })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \t export class ${4:className} implements OnInit {
  \t constructor(){ }
  \t ngOnInit() { }
  \t}
  '''
    description: "Progress bar"
  "Amexio Item Selector":
    prefix: "Amexio-ts-Item-Selector"
    description: "Amexio Item Selector"
    body: '''
  import { Component, OnInit } from '@angular/core';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tngOnInit() {}
  \tgetSelectedData(${6:data}: any) {
  \t\tthis.${5:data} = ${6:data};
  \t}
  }
  '''
  "Amexio Grid":
    prefix: "Amexio-ts-Grid"
    description: "Amexio Simple Grid"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \texport class ${4:name}Component implements OnInit {
  \tconstructor() { }
  \tngOnInit() {}
  }
  '''
  "Amexio Grid Templete":
    prefix: "Amexio-ts-Grid-Template"
    description: "Amexio Grid template"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetRowData(${6:data}: any) {
  \t}
  \tngOnInit() {}
  \t}
  '''
  "Amexio Datagrid Filter":
    prefix: "Amexio-ts-Datagrid-Filter"
    description: "Amexio Filter Grid"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \texport class ${4:name}Component implements OnInit {
  \tconstructor() { }
  \tonRowSelect(${6:data}: any) {
  \t}
  \tngOnInit() {}
  \t}
  '''
  "Amexio Grid Groupby":
    prefix: "Amexio-ts-Grid-Groupby"
    description: "description"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
   @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  \t})
  \texport class ${4:name}Component implements OnInit {
  \tconstructor() { }
  \tngOnInit() {}
  }
  '''
  "Amexio Grid Columnsize":
    prefix: "Amexio-ts-Grid-Columnsize"
    description: "Amexio columnsize Grid"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})
  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetRowData(${6:data}: any) {
  \t}
  \tngOnInit() {}
  \t}
  '''
  "Amexio Grid Scroll":
    prefix: "Amexio-ts-Grid-Scroll"
    description: "Amexio Scroll Grid "
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  \t})

  \texport class ${4:name}Component implements OnInit {
  \tconstructor() { }
  \tngOnInit() {}
  \t}
  '''
  "Amexio Data TreeDatagrid":
    prefix: "Amexio-ts-Data-Tree-Data-Grid"
    description: "Amexio Treegrid Data"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })

  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tngOnInit() {}
  \tgetSelectedData(${6:data}: any) {
  \t\tthis.${5:data} = ${6:data};
  }
  }
  '''
  "Amexio Tree":
    prefix: "Amexio-ts-Tree"
    description: "Amexio Tree Simple Data"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component implements OnInit {
  \tconstructor() { }
  \tgetNodeData(${6:data}: any) {
  }
  \tngOnInit() {}
  }
  '''
  "Amexio Tree Template":
    prefix: "Amexio-ts-Tree-Template"
    description: "Amexio tree template"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetNodeData(${6:data}: any) {
  }
  \tngOnInit() {}
  }
  '''
  "Amexio Tree Filter":
    prefix: "Amexio-ts-Tree-Filter"
    description: "Amexio Tree Filter"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetNodeData(${6:data}: any) {
  }
  \tngOnInit() {}
  }
  '''
  "Amexio Tree Checkbox":
    prefix: "Amexio-ts-Tree-Checkbox"
    description: "Amexio Tree with Checkbox"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetNodeData(${6:data}: any) {
  }
  \tngOnInit() {}
  }
  '''
  "Amexio Tree Horizontal":
    prefix: "Amexio-ts-Tree-Horizontal"
    description: "Amexio Tree Horizontal"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component implements OnInit {
  \t${5:data}:any;
  \tconstructor() { }
  \tgetNodeData(${6:data}: any) {
  }
  \tngOnInit() {}
  }
  '''
  "Amexio Data listbox":
    prefix: "Amexio-ts-Data-Listbox"
    description: "Amexio listbox Data"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })

  \texport class ${4:name}Component  {
  \t${5:localdata}:any;
  \tconstructor() {
  \tthis.${5:localdata} = {
  //enter json/data
  \t\t}
  \t};
  }

  '''
  "Amexio Media":
    prefix: "Amexio-ts-Media-Image"
    description: "Amexio Image Media"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })

  \texport class ${4:name}Component {
  \t${5:data}:any;
  \tconstructor() { }
  }
  '''
  "Amexio Media Video":
    prefix: "Amexio-ts-Media-Video"
    description: "Amexio Media Video"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';

  @Component({
  \tselector: '${1:selectorname}',
  \ttemplateUrl: '${2:name}.component.html',
  \tstyleUrls: ['${3:name}.component.css'],
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : []
  })

  \texport class ${4:name}Component {
  \t${5:data}:any;
  \tconstructor() { }
  }
  '''
  "Amexio Chart Area":
    prefix: "Amexio-ts-Chart-Area"
    description: "Amexio Area Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart  Bar":
    prefix: "Amexio-ts-Chart-Bar"
    description: "Amexio Chart Bar"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data:any};
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Bubble":
    prefix: "Amexio-ts-Chart-Bubble"
    description: "Amexio Bubble Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Candlestick ":
    prefix: "Amexio-ts-Candlestick-CShart"
    description: "Amexio candlestick chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio  Chart Candlestick Waterfall":
    prefix: "Amexio-ts-Chart-Candlestick-Waterfall"
    description: "Amexio candlestick chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t\"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Column":
    prefix: "Amexio-ts-Chart-Column"
    description: "amexio column chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t\"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Combo":
    prefix: "Amexio-ts-Chart-Combo"
    description: "Amexio Combo Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Donut":
    prefix: "Amexio-ts-Chart-Donut"
    description: "Amexio donut chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t\"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Chart Histogram":
    prefix: "Amexio-ts-chart-histogram"
    description: "Amexio histogram chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  \t})
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  \t}
  \tngOnInit() {
  \t}
  }
  '''
  "Amexio Chart Line":
    prefix: "Amexio-ts-Chart-Line"
    description: "Amexio Line Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  \t}
  \tngOnInit() {
  \t}
  \t}
  '''
  "Amexio Chart Pie ":
    prefix: "Amexio-ts-chart-pie"
    description: "Amexio Pie Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  \t})
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  \t}
  \tngOnInit() {
  }
  }
  '''
  "Amexio Scatter Chart":
    prefix: "Amexio-ts-Chart-Scatter"
    description: "Amexio Scatter Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t\"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  \t];
  \t}
  \tngOnInit() {
  \t}
  \t}
  '''
  "Amexio Chart TimeLine":
    prefix: "Amexio-ts-Chart-Timeline"
    description: "Amexio TimeLine Chart"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,ChartLoaderService} from
  \t \"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  \t})
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [ChartLoaderService]
  \t})
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Dashboard Gauge Chart":
    prefix: "Amexio-ts-Dashboard-Gauge-Chart"
    description: "Amexio Chart Dashboard"
    body: '''
  \timport {Component, OnInit} from '@angular/core';
  \timport {AmexioWidgetModule,DashboardLoaderService} from
  \t\"${1:amexio-ng-extensions}\";
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [DashboardLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Dashboards Datapoints":
    prefix: "Amexio-ts-Dashboards-Datapoints"
    description: "Amexio Datapionts-dashboards"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule} from 'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [DashboardLoaderService]
  })
  \texport class AreaChartDemoComponent implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Maps Geo Charts":
    prefix: "Amexio-ts-Maps-Geo-Chart"
    description: "Amexio-map-geo-chart"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule,AmexioMapModule} from 'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Maps Tree":
    prefix: "Amexio-ts-Maps-Tree"
    description: "Amexio Tree Maps"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule,AmexioMapModule} from 'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \texport class Component_name implements OnInit {
  \t${4:Data}:any;
  \tconstructor() {
  \tthis.${4:Data}=[
  ];
  }
  \tngOnInit() {
  }
  }
  '''
  "Amexio Enterpise Media Content":
    prefix: "Amexio-ts-Enterpise-Media-Content"
    description: "Amexio Media Content"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule,AmexioMapModule,AmexioEnterpriseModule} from
  \t'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \texport class Component_name {
  }
  '''
  "Amexio Enterprise Youtube Video Player":
    prefix: "Amexio-ts-Enterprise-Video-Player"
    description: "Amexio Video player"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule,AmexioMapModule,AmexioEnterpriseModule} from
  \t'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \t@NgModule({
  \timports: [AmexioWidgetModule ],
  \texports: [],
  \tdeclarations : [],
  \tproviders : [DashboardLoaderService]
  })
  \texport class Component_name {
  }
  '''
  "Amexio Enterprise Multi Item Carousel":
    prefix: "Amexio-ts-Enterprise-Multi-Item-Carousel"
    description: "Amexio Enterprise Multi item carousel"
    body: '''
  import { Component, OnInit } from '@angular/core';
  import {AmexioWidgetModule,AmexioMapModule,AmexioEnterpriseModule} from
  \t 'amexio-ng-extensions';
  \timport{NgModule} from '@angular/core';
  \timport { Http } from '@angular/http';
  \t@Component({
  \tselector: '${2:Selectorname}',
  \t templateUrl: '${3:name}demo.html'
  })
  \texport class Component_name{
  \tnewreleases : any;
  \ttopRateContent : any;
  \tconstructor(private http :Http) {
  \tthis.http.get('path').subscribe(res=>this.newreleases = res.json());
  \tthis.http.get('path').subscribe(res=>this.topRateContent = res.json());
  }
  }
  '''
  "Amexio-ts-Text-label":
    prefix: "Amexio-ts-Text-label"
    body: '''
    import { Component, OnInit } from '@angular/core';
    \t @Component({
    \t selector: '${1:name}',
    \t templateUrl: '${2:name}.component.html',
    \t styleUrls: ['${3:name}.component.css']
    \t })
    \t@NgModule({
    \timports: [],
    \texports: [],
    \tdeclarations : [],
    \tproviders : []
    \t})
    \t export class ${4:className} implements OnInit {
    \t constructor(){ }
    \t ngOnInit() { }
    \t}
    '''
